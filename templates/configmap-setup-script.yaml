apiVersion: v1
data:
  post-install.sh: |
    #!/bin/bash

    set -e

    # Change HELM_DEPLOYMENT_NAME if you deploy under a different name
    HELM_DEPLOYMENT_NAME='vault-server'

    # /bin is protected, so download executables to /tmp
    [[ ! -d /tmp/bin ]] && mkdir /tmp/bin
    export PATH="$PATH:/tmp/bin"

    # TODO: Should be able to curl k8s API instead of downloading oc
    curl -k -L -o /tmp/bin/oc "http://downloads.openshift-console.svc.cluster.local/amd64/linux/oc"
    chmod +x /tmp/bin/oc

    curl -k -L -o /tmp/bin/jq "https://github.com/stedolan/jq/releases/latest/download/jq-linux64"
    chmod +x /tmp/bin/jq

    unseal-vault() {
      # We will need 3/5 keys to unseal each Vault instance
      VAULT_UNSEAL_KEY1=$(jq -r '.unseal_keys_b64[0]' /tmp/recovery-keys.json)
      VAULT_UNSEAL_KEY2=$(jq -r '.unseal_keys_b64[1]' /tmp/recovery-keys.json)
      VAULT_UNSEAL_KEY3=$(jq -r '.unseal_keys_b64[2]' /tmp/recovery-keys.json)

      vault operator unseal "$VAULT_UNSEAL_KEY1"
      vault operator unseal "$VAULT_UNSEAL_KEY2"
      vault operator unseal "$VAULT_UNSEAL_KEY3"
    }

    # Unseal vault if vault-recovery-keys secret exists
    if oc get secrets vault-recovery-keys &> /dev/null; then
        echo 'Vault is already initialized!'
        echo 'Using vault-recovery-key secret to unseal vault...'
        oc get secret vault-recovery-keys \
            -o jsonpath="{.data.recovery-keys\.json}" \
            | base64 -d > /tmp/recovery-keys.json
        unseal-vault
        echo 'Vault is unsealed!'
        exit 0
    fi

    if [[ "$HOSTNAME" != "${HELM_DEPLOYMENT_NAME}-0" ]] ; then
        echo "Joining $HOSTNAME to raft"
        vault operator raft join "http://${HELM_DEPLOYMENT_NAME}-0.${HELM_DEPLOYMENT_NAME}-internal:8200"
        echo "$HOSTNAME joined to raft!"
        sleep 10
        # Exit with error so that pod restarts until vault-recovery-keys secret
        # is created after vault-server-0 initialization.
        echo "Exit code 2: Raft joined, vault-recovery-keys secret not yet present"
        exit 2
    fi

    echo 'Initializing vault...'
    vault operator init -format=json > /tmp/recovery-keys.json

    echo 'Unsealing vault...'
    unseal-vault

    echo "Creating vault-recovery-keys secret..."
    oc create secret generic vault-recovery-keys --from-file=/tmp/recovery-keys.json

    rm /tmp/recovery-keys.json

    echo "Done!"
kind: ConfigMap
metadata:
  name: post-install-script
  namespace: vault-server
